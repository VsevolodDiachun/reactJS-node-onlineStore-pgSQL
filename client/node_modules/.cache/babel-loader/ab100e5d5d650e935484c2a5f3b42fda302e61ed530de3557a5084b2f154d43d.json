{"ast":null,"code":"import React from 'react';\nimport { Routes, Route, Navigate, createBrowserRouter } from 'react-router-dom';\nimport { authRoutes, publicRoutes } from \"../routes\";\nconst isAuth = false;\n\n// export const router = createBrowserRouter([\n//     isAuth ? authRoutes.map(({path, Element}) => <Route key={path} path={path} element={<Element />}/>):\n//     publicRoutes.map(({path, Element}) => <Route key={path} path={path} element={<Element />}/>)\n// ])\n\nexport const router = createBrowserRouter([isAuth ? authRoutes : publicRoutes]);\n\n/*\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: (\n      <div>\n        <h1>Hello World</h1>\n        <Link to=\"about\">About Us</Link>\n      </div>\n    ),\n  },\n  {\n    path: \"about\",\n    element: <div>About</div>,\n  },\n]);\n */\n\n/*\nconst AppRouter = () => {\n    const isAuth = false\n\n    return (\n        <Routes>\n            {isAuth === true && authRoutes.map(({path, Element}) => <Route key={path} path={path} element={<Element />}/>)}\n            {publicRoutes.map(({path, Element}) => <Route key={path} path={path} element={<Element />}/>)}\n        </Routes>\n    );\n};\n\nexport default AppRouter;*/","map":{"version":3,"names":["React","Routes","Route","Navigate","createBrowserRouter","authRoutes","publicRoutes","isAuth","router"],"sources":["/Users/diachun/Repository/Programming/Code/reactJS-node-onlineStore-pgSQL/client/src/components/AppRouter.js"],"sourcesContent":["import React from 'react';\nimport {Routes, Route, Navigate, createBrowserRouter} from 'react-router-dom'\nimport {authRoutes, publicRoutes} from \"../routes\";\n\nconst isAuth = false\n\n// export const router = createBrowserRouter([\n//     isAuth ? authRoutes.map(({path, Element}) => <Route key={path} path={path} element={<Element />}/>):\n//     publicRoutes.map(({path, Element}) => <Route key={path} path={path} element={<Element />}/>)\n// ])\n\nexport const router = createBrowserRouter([\n    isAuth? authRoutes:  publicRoutes\n])\n\n/*\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: (\n      <div>\n        <h1>Hello World</h1>\n        <Link to=\"about\">About Us</Link>\n      </div>\n    ),\n  },\n  {\n    path: \"about\",\n    element: <div>About</div>,\n  },\n]);\n */\n\n/*\nconst AppRouter = () => {\n    const isAuth = false\n\n    return (\n        <Routes>\n            {isAuth === true && authRoutes.map(({path, Element}) => <Route key={path} path={path} element={<Element />}/>)}\n            {publicRoutes.map(({path, Element}) => <Route key={path} path={path} element={<Element />}/>)}\n        </Routes>\n    );\n};\n\nexport default AppRouter;*/\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,mBAAmB,QAAO,kBAAkB;AAC7E,SAAQC,UAAU,EAAEC,YAAY,QAAO,WAAW;AAElD,MAAMC,MAAM,GAAG,KAAK;;AAEpB;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,MAAM,GAAGJ,mBAAmB,CAAC,CACtCG,MAAM,GAAEF,UAAU,GAAGC,YAAY,CACpC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}