{"ast":null,"code":"var _jsxFileName = \"/Users/diachun/Repository/Programming/Code/reactJS-node-onlineStore-pgSQL/client/src/components/DeviceList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector } from \"react-redux\";\nimport DeviceItem from \"./DeviceItem\";\nimport { useEffect } from \"react\";\nimport { devicesFromBasket, fetchBrand } from \"../http/deviceAPI\";\nimport { useAction } from \"../hooks/useAction\";\nimport { Row } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeviceList = () => {\n  _s();\n  const {\n    isUserId\n  } = useSelector(state => state.userReducer);\n  const {\n    isDevices,\n    isBasket\n  } = useSelector(state => state.deviceReducer);\n  const {\n    ASetBasket,\n    ASetBasketCount\n  } = useAction();\n\n  // useEffect(() => {\n  //     devicesFromBasket({id: isUserId})\n  //         .then(data => {console.log(data);\n  //             ASetBasket(data.devicesData);\n  //             ASetBasketCount(data.countData)\n  //         })\n  //         .catch(e => console.log('errorA'))\n  // }, [])\n\n  // console.log(isDevices)\n\n  const StarRating = _ref => {\n    let {\n      rating,\n      onRatingChange\n    } = _ref;\n    const stars = Array.from({\n      length: 5\n    }, (_, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `star ${index < rating ? 'filled' : ''}`,\n      onClick: () => onRatingChange(index + 1),\n      children: \"\\u2605\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"star-rating\",\n      children: stars\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  };\n  const [rating, setRating] = useState(0);\n  const handleRatingChange = newRating => {\n    setRating(newRating);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-wrap\",\n    children: isDevices.map(device => /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(DeviceItem, {\n        device: device\n      }, device.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(StarRating, {\n        rating: rating,\n        onRatingChange: handleRatingChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0412\\u0438 \\u043E\\u0446\\u0456\\u043D\\u0438\\u043B\\u0438 \\u0442\\u043E\\u0432\\u0430\\u0440 \\u043D\\u0430 \", rating, \" \\u0437\\u0456\\u0440\\u043E\\u043A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(DeviceList, \"ugnhp/h/K6+gfICv09Ca19DDnsE=\", false, function () {\n  return [useSelector, useSelector, useAction];\n});\n_c = DeviceList;\nexport default DeviceList;\nvar _c;\n$RefreshReg$(_c, \"DeviceList\");","map":{"version":3,"names":["React","useState","useSelector","DeviceItem","useEffect","devicesFromBasket","fetchBrand","useAction","Row","jsxDEV","_jsxDEV","DeviceList","_s","isUserId","state","userReducer","isDevices","isBasket","deviceReducer","ASetBasket","ASetBasketCount","StarRating","_ref","rating","onRatingChange","stars","Array","from","length","_","index","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","setRating","handleRatingChange","newRating","map","device","id","_c","$RefreshReg$"],"sources":["/Users/diachun/Repository/Programming/Code/reactJS-node-onlineStore-pgSQL/client/src/components/DeviceList.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {useSelector} from \"react-redux\";\nimport DeviceItem from \"./DeviceItem\";\nimport {useEffect} from \"react\";\nimport {devicesFromBasket, fetchBrand} from \"../http/deviceAPI\";\nimport {useAction} from \"../hooks/useAction\";\nimport {Row} from \"react-bootstrap\";\n\nconst DeviceList = () => {\n    const {isUserId} = useSelector(state => state.userReducer)\n    const {isDevices, isBasket} = useSelector(state => state.deviceReducer)\n    const {ASetBasket, ASetBasketCount} = useAction()\n\n    // useEffect(() => {\n    //     devicesFromBasket({id: isUserId})\n    //         .then(data => {console.log(data);\n    //             ASetBasket(data.devicesData);\n    //             ASetBasketCount(data.countData)\n    //         })\n    //         .catch(e => console.log('errorA'))\n    // }, [])\n\n    // console.log(isDevices)\n\n    const StarRating = ({ rating, onRatingChange }) => {\n        const stars = Array.from({ length: 5 }, (_, index) => (\n            <span\n                key={index}\n                className={`star ${index < rating ? 'filled' : ''}`}\n                onClick={() => onRatingChange(index + 1)}\n            >\n      ★\n    </span>\n        ));\n\n        return <div className=\"star-rating\">{stars}</div>;\n    };\n\n\n\n    const [rating, setRating] = useState(0);\n\n    const handleRatingChange = (newRating) => {\n        setRating(newRating);\n    };\n\n    return (\n        <div className=\"d-flex flex-wrap\">\n            {isDevices.map(device =>\n                <Row>\n                    <DeviceItem key={device.id} device={device}/>\n                    <StarRating rating={rating} onRatingChange={handleRatingChange} />\n                    <p>Ви оцінили товар на {rating} зірок</p>\n                </Row>\n\n            )}\n        </div>\n    );\n};\n\nexport default DeviceList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}