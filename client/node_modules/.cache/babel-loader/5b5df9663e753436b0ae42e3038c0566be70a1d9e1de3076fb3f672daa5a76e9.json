{"ast":null,"code":"import { $authHost, $host } from \"./index\";\n\n//TYPES\n\nexport const createType = async type => {\n  const {\n    data\n  } = await $authHost.post('api/type', type);\n  return data;\n};\nexport const fetchTypes = async () => {\n  const {\n    data\n  } = await $host.get('api/type');\n  return data;\n};\n\n//BRANDS\n\nexport const createBrand = async brand => {\n  const {\n    data\n  } = await $authHost.post('api/brand', brand);\n  return data;\n};\nexport const fetchBrand = async () => {\n  const {\n    data\n  } = await $host.get('api/brand');\n  return data;\n};\n\n//DEVICE\n\nexport const createDevice = async device => {\n  const {\n    data\n  } = await $authHost.post('api/device', device);\n  return data;\n};\nexport const fetchDevice = async function (typeId, brandId, page) {\n  let limit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n  const {\n    data\n  } = await $host.get('api/device', {\n    params: {\n      typeId,\n      brandId,\n      page,\n      limit\n    }\n  });\n  return data;\n};\nexport const fetchOneDevice = async id => {\n  const {\n    data\n  } = await $host.get('api/device/' + id);\n  return data;\n};","map":{"version":3,"names":["$authHost","$host","createType","type","data","post","fetchTypes","get","createBrand","brand","fetchBrand","createDevice","device","fetchDevice","typeId","brandId","page","limit","arguments","length","undefined","params","fetchOneDevice","id"],"sources":["/Users/diachun/Repository/Programming/Code/reactJS-node-onlineStore-pgSQL/client/src/http/deviceAPI.js"],"sourcesContent":["import {$authHost, $host} from \"./index\";\n\n//TYPES\n\nexport const createType = async (type) => {\n    const {data} = await $authHost.post('api/type', type)\n    return data\n}\n\nexport const fetchTypes = async () => {\n    const {data} = await $host.get('api/type')\n    return data\n}\n\n//BRANDS\n\nexport const createBrand = async (brand) => {\n    const {data} = await $authHost.post('api/brand', brand)\n    return data\n}\n\nexport const fetchBrand = async () => {\n    const {data} = await $host.get('api/brand')\n    return data\n}\n\n//DEVICE\n\nexport const createDevice = async (device) => {\n    const {data} = await $authHost.post('api/device', device)\n    return data\n}\n\nexport const fetchDevice = async (typeId, brandId, page, limit = 5) => {\n    const {data} = await $host.get('api/device', {params: {\n            typeId, brandId, page, limit\n        }})\n    return data\n}\n\nexport const fetchOneDevice = async (id) => {\n    const {data} = await $host.get('api/device/' + id)\n    return data\n}"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,KAAK,QAAO,SAAS;;AAExC;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAI,IAAK;EACtC,MAAM;IAACC;EAAI,CAAC,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,UAAU,EAAEF,IAAI,CAAC;EACrD,OAAOC,IAAI;AACf,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAM;IAACF;EAAI,CAAC,GAAG,MAAMH,KAAK,CAACM,GAAG,CAAC,UAAU,CAAC;EAC1C,OAAOH,IAAI;AACf,CAAC;;AAED;;AAEA,OAAO,MAAMI,WAAW,GAAG,MAAOC,KAAK,IAAK;EACxC,MAAM;IAACL;EAAI,CAAC,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,WAAW,EAAEI,KAAK,CAAC;EACvD,OAAOL,IAAI;AACf,CAAC;AAED,OAAO,MAAMM,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAM;IAACN;EAAI,CAAC,GAAG,MAAMH,KAAK,CAACM,GAAG,CAAC,WAAW,CAAC;EAC3C,OAAOH,IAAI;AACf,CAAC;;AAED;;AAEA,OAAO,MAAMO,YAAY,GAAG,MAAOC,MAAM,IAAK;EAC1C,MAAM;IAACR;EAAI,CAAC,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,YAAY,EAAEO,MAAM,CAAC;EACzD,OAAOR,IAAI;AACf,CAAC;AAED,OAAO,MAAMS,WAAW,GAAG,eAAAA,CAAOC,MAAM,EAAEC,OAAO,EAAEC,IAAI,EAAgB;EAAA,IAAdC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAC9D,MAAM;IAACd;EAAI,CAAC,GAAG,MAAMH,KAAK,CAACM,GAAG,CAAC,YAAY,EAAE;IAACc,MAAM,EAAE;MAC9CP,MAAM;MAAEC,OAAO;MAAEC,IAAI;MAAEC;IAC3B;EAAC,CAAC,CAAC;EACP,OAAOb,IAAI;AACf,CAAC;AAED,OAAO,MAAMkB,cAAc,GAAG,MAAOC,EAAE,IAAK;EACxC,MAAM;IAACnB;EAAI,CAAC,GAAG,MAAMH,KAAK,CAACM,GAAG,CAAC,aAAa,GAAGgB,EAAE,CAAC;EAClD,OAAOnB,IAAI;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}