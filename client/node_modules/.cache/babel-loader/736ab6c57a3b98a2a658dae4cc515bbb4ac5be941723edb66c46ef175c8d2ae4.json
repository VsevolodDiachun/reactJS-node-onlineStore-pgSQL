{"ast":null,"code":"var _jsxFileName = \"/Users/diachun/Repository/Programming/Code/reactJS-node-onlineStore-pgSQL/client/src/components/AppRouter.js\";\nimport React from 'react';\nimport { Routes, Route, Navigate, createBrowserRouter } from 'react-router-dom';\nimport { authRoutes, publicRoutes } from \"../routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isAuth = false;\nexport const router = createBrowserRouter([isAuth === true && authRoutes.map(_ref => {\n  let {\n    path,\n    Element\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: path,\n    element: /*#__PURE__*/_jsxDEV(Element, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 99\n    }, this)\n  }, path, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 60\n  }, this);\n})\n// {publicRoutes.map(({path, Element}) => <Route key={path} path={path} element={<Element />}/>)}\n]);\n\n/*\nconst AppRouter = () => {\n    const isAuth = false\n\n    return (\n        <Routes>\n            {isAuth === true && authRoutes.map(({path, Element}) => <Route key={path} path={path} element={<Element />}/>)}\n            {publicRoutes.map(({path, Element}) => <Route key={path} path={path} element={<Element />}/>)}\n        </Routes>\n    );\n};\n\nexport default AppRouter;*/","map":{"version":3,"names":["React","Routes","Route","Navigate","createBrowserRouter","authRoutes","publicRoutes","jsxDEV","_jsxDEV","isAuth","router","map","_ref","path","Element","element","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/diachun/Repository/Programming/Code/reactJS-node-onlineStore-pgSQL/client/src/components/AppRouter.js"],"sourcesContent":["import React from 'react';\nimport {Routes, Route, Navigate, createBrowserRouter} from 'react-router-dom'\nimport {authRoutes, publicRoutes} from \"../routes\";\n\nconst isAuth = false\nexport const router = createBrowserRouter([\n    isAuth === true && authRoutes.map(({path, Element}) => <Route key={path} path={path} element={<Element />}/>)\n    // {publicRoutes.map(({path, Element}) => <Route key={path} path={path} element={<Element />}/>)}\n])\n\n/*\nconst AppRouter = () => {\n    const isAuth = false\n\n    return (\n        <Routes>\n            {isAuth === true && authRoutes.map(({path, Element}) => <Route key={path} path={path} element={<Element />}/>)}\n            {publicRoutes.map(({path, Element}) => <Route key={path} path={path} element={<Element />}/>)}\n        </Routes>\n    );\n};\n\nexport default AppRouter;*/\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,mBAAmB,QAAO,kBAAkB;AAC7E,SAAQC,UAAU,EAAEC,YAAY,QAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAG,KAAK;AACpB,OAAO,MAAMC,MAAM,GAAGN,mBAAmB,CAAC,CACtCK,MAAM,KAAK,IAAI,IAAIJ,UAAU,CAACM,GAAG,CAACC,IAAA;EAAA,IAAC;IAACC,IAAI;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAAA,oBAAKJ,OAAA,CAACN,KAAK;IAAYW,IAAI,EAAEA,IAAK;IAACE,OAAO,eAAEP,OAAA,CAACM,OAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAI,GAAvCN,IAAI;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAqC;AAAA;AAC5G;AAAA,CACH,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}