{"ast":null,"code":"var _jsxFileName = \"/Users/diachun/Repository/Programming/Code/reactJS-node-onlineStore-pgSQL/client/src/components/AppRouter.js\";\nimport React from 'react';\nimport { Routes, Route, Navigate, BrowserRouter } from 'react-router-dom';\nimport { authRoutes, publicRoutes } from \"../routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppRouter = () => {\n  const isAuth = false;\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [isAuth === true && authRoutes.map(_ref => {\n        let {\n          path,\n          Elements\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: path,\n          element: /*#__PURE__*/_jsxDEV(Elements, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 113\n          }, this)\n        }, path, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 74\n        }, this);\n      }), publicRoutes.map(_ref2 => {\n        let {\n          path,\n          Elements\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: path,\n          element: /*#__PURE__*/_jsxDEV(Elements, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 96\n          }, this)\n        }, path, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 57\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = AppRouter;\nexport default AppRouter;\nvar _c;\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"names":["React","Routes","Route","Navigate","BrowserRouter","authRoutes","publicRoutes","jsxDEV","_jsxDEV","AppRouter","isAuth","children","map","_ref","path","Elements","element","fileName","_jsxFileName","lineNumber","columnNumber","_ref2","_c","$RefreshReg$"],"sources":["/Users/diachun/Repository/Programming/Code/reactJS-node-onlineStore-pgSQL/client/src/components/AppRouter.js"],"sourcesContent":["import React from 'react';\nimport {Routes, Route, Navigate, BrowserRouter} from 'react-router-dom'\nimport {authRoutes, publicRoutes} from \"../routes\";\n\nconst AppRouter = () => {\n    const isAuth = false\n    return (\n        <BrowserRouter>\n            <Routes>\n                {isAuth === true && authRoutes.map(({path, Elements}) =>(<Route key={path} path={path} element={<Elements />}/>))}\n                {publicRoutes.map(({path, Elements}) =>(<Route key={path} path={path} element={<Elements />}/>))}\n            </Routes>\n        </BrowserRouter>\n    );\n};\n\nexport default AppRouter;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,QAAO,kBAAkB;AACvE,SAAQC,UAAU,EAAEC,YAAY,QAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACpB,MAAMC,MAAM,GAAG,KAAK;EACpB,oBACIF,OAAA,CAACJ,aAAa;IAAAO,QAAA,eACVH,OAAA,CAACP,MAAM;MAAAU,QAAA,GACFD,MAAM,KAAK,IAAI,IAAIL,UAAU,CAACO,GAAG,CAACC,IAAA;QAAA,IAAC;UAACC,IAAI;UAAEC;QAAQ,CAAC,GAAAF,IAAA;QAAA,oBAAKL,OAAA,CAACN,KAAK;UAAYY,IAAI,EAAEA,IAAK;UAACE,OAAO,eAAER,OAAA,CAACO,QAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAI,GAAxCN,IAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAsC;MAAA,CAAC,CAAC,EAChHd,YAAY,CAACM,GAAG,CAACS,KAAA;QAAA,IAAC;UAACP,IAAI;UAAEC;QAAQ,CAAC,GAAAM,KAAA;QAAA,oBAAKb,OAAA,CAACN,KAAK;UAAYY,IAAI,EAAEA,IAAK;UAACE,OAAO,eAAER,OAAA,CAACO,QAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAI,GAAxCN,IAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAsC;MAAA,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC3F;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAExB,CAAC;AAACE,EAAA,GAVIb,SAAS;AAYf,eAAeA,SAAS;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}