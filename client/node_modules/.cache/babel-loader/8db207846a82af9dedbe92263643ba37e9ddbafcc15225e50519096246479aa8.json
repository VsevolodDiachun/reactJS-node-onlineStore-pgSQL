{"ast":null,"code":"var _jsxFileName = \"/Users/diachun/Repository/Programming/Code/reactJS-node-onlineStore-pgSQL/client/src/components/TypeBar.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from \"react-redux\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { useAction } from \"../hooks/useAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypeBar = () => {\n  _s();\n  const {\n    isTypes,\n    isSelectedType\n  } = useSelector(state => state.deviceReducer);\n  const {\n    ASetSelectedType\n  } = useAction();\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    children: isTypes.map(type => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      active: type.id === isSelectedType.id,\n      onClick: () => ASetSelectedType(type.id),\n      children: type.name\n    }, type.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_s(TypeBar, \"7aMORbu5qAr+trGodnbQAKX0Vpw=\", false, function () {\n  return [useSelector, useAction];\n});\n_c = TypeBar;\nexport default TypeBar;\nvar _c;\n$RefreshReg$(_c, \"TypeBar\");","map":{"version":3,"names":["React","useSelector","ListGroup","useAction","jsxDEV","_jsxDEV","TypeBar","_s","isTypes","isSelectedType","state","deviceReducer","ASetSelectedType","children","map","type","Item","active","id","onClick","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/diachun/Repository/Programming/Code/reactJS-node-onlineStore-pgSQL/client/src/components/TypeBar.js"],"sourcesContent":["import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {ListGroup} from \"react-bootstrap\";\nimport {useAction} from \"../hooks/useAction\";\n\n\nconst TypeBar = () => {\n    const {isTypes, isSelectedType} = useSelector(state => state.deviceReducer)\n    const {ASetSelectedType} = useAction()\n\n    return (\n        <ListGroup>\n            {isTypes.map(type =>\n                <ListGroup.Item\n                    key={type.id}\n                    active={type.id === isSelectedType.id}\n                    onClick={() => ASetSelectedType(type.id)}\n                >\n                    {type.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n};\n\nexport default TypeBar;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,QAAO,aAAa;AACvC,SAAQC,SAAS,QAAO,iBAAiB;AACzC,SAAQC,SAAS,QAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM;IAACC,OAAO;IAAEC;EAAc,CAAC,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,aAAa,CAAC;EAC3E,MAAM;IAACC;EAAgB,CAAC,GAAGT,SAAS,EAAE;EAEtC,oBACIE,OAAA,CAACH,SAAS;IAAAW,QAAA,EACLL,OAAO,CAACM,GAAG,CAACC,IAAI,iBACbV,OAAA,CAACH,SAAS,CAACc,IAAI;MAEXC,MAAM,EAAEF,IAAI,CAACG,EAAE,KAAKT,cAAc,CAACS,EAAG;MACtCC,OAAO,EAAEA,CAAA,KAAMP,gBAAgB,CAACG,IAAI,CAACG,EAAE,CAAE;MAAAL,QAAA,EAExCE,IAAI,CAACK;IAAI,GAJLL,IAAI,CAACG,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAKC;EACpB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACO;AAEpB,CAAC;AAACjB,EAAA,CAjBID,OAAO;EAAA,QACyBL,WAAW,EAClBE,SAAS;AAAA;AAAAsB,EAAA,GAFlCnB,OAAO;AAmBb,eAAeA,OAAO;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}