{"ast":null,"code":"var _jsxFileName = \"/Users/diachun/Repository/Programming/Code/reactJS-node-onlineStore-pgSQL/client/src/components/DeviceList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from \"react-redux\";\nimport DeviceItem from \"./DeviceItem\";\nimport { useEffect } from \"react\";\nimport { devicesFromBasket, fetchBrand } from \"../http/deviceAPI\";\nimport { useAction } from \"../hooks/useAction\";\nimport { Row } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeviceList = () => {\n  _s();\n  const {\n    isUserId\n  } = useSelector(state => state.userReducer);\n  const {\n    isDevices,\n    isBasket\n  } = useSelector(state => state.deviceReducer);\n  const {\n    ASetBasket,\n    ASetBasketCount,\n    ASetBrands\n  } = useAction();\n  useEffect(() => {\n    devicesFromBasket({\n      id: isUserId\n    }).then(data => {\n      ASetBasket(data.devicesData);\n      ASetBasketCount(data.countData);\n    }).catch(e => console.log('errorA'));\n  }, [isUserId]);\n  useEffect(() => {\n    fetchBrand().then(data => ASetBrands(data));\n  }, [isUserId]);\n\n  //console.log(isDevices)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-wrap\",\n    children: isDevices.map(device => /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(DeviceItem, {\n        device: device\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)\n    }, device.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(DeviceList, \"x2bmlkBHmqCejawG4nvGAMJjXwU=\", false, function () {\n  return [useSelector, useSelector, useAction];\n});\n_c = DeviceList;\nexport default DeviceList;\nvar _c;\n$RefreshReg$(_c, \"DeviceList\");","map":{"version":3,"names":["React","useSelector","DeviceItem","useEffect","devicesFromBasket","fetchBrand","useAction","Row","jsxDEV","_jsxDEV","DeviceList","_s","isUserId","state","userReducer","isDevices","isBasket","deviceReducer","ASetBasket","ASetBasketCount","ASetBrands","id","then","data","devicesData","countData","catch","e","console","log","className","children","map","device","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/diachun/Repository/Programming/Code/reactJS-node-onlineStore-pgSQL/client/src/components/DeviceList.js"],"sourcesContent":["import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport DeviceItem from \"./DeviceItem\";\nimport {useEffect} from \"react\";\nimport {devicesFromBasket, fetchBrand} from \"../http/deviceAPI\";\nimport {useAction} from \"../hooks/useAction\";\nimport {Row} from \"react-bootstrap\";\n\nconst DeviceList = () => {\n    const {isUserId} = useSelector(state => state.userReducer)\n    const {isDevices, isBasket} = useSelector(state => state.deviceReducer)\n    const {ASetBasket, ASetBasketCount, ASetBrands} = useAction()\n\n    useEffect(() => {\n        devicesFromBasket({id: isUserId})\n            .then(data => {\n                ASetBasket(data.devicesData);\n                ASetBasketCount(data.countData)\n            })\n            .catch(e => console.log('errorA'))\n    }, [isUserId])\n\n    useEffect(() => {\n        fetchBrand().then(data => ASetBrands(data))\n    }, [isUserId])\n\n    //console.log(isDevices)\n\n    return (\n        <div className=\"d-flex flex-wrap\">\n            {isDevices.map(device =>\n                <Row key={device.id}>\n                    <DeviceItem device={device}/>\n                </Row>\n\n            )}\n        </div>\n    );\n};\n\nexport default DeviceList;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,QAAO,aAAa;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,SAAQC,SAAS,QAAO,OAAO;AAC/B,SAAQC,iBAAiB,EAAEC,UAAU,QAAO,mBAAmB;AAC/D,SAAQC,SAAS,QAAO,oBAAoB;AAC5C,SAAQC,GAAG,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAACC;EAAQ,CAAC,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,WAAW,CAAC;EAC1D,MAAM;IAACC,SAAS;IAAEC;EAAQ,CAAC,GAAGf,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACI,aAAa,CAAC;EACvE,MAAM;IAACC,UAAU;IAAEC,eAAe;IAAEC;EAAU,CAAC,GAAGd,SAAS,EAAE;EAE7DH,SAAS,CAAC,MAAM;IACZC,iBAAiB,CAAC;MAACiB,EAAE,EAAET;IAAQ,CAAC,CAAC,CAC5BU,IAAI,CAACC,IAAI,IAAI;MACVL,UAAU,CAACK,IAAI,CAACC,WAAW,CAAC;MAC5BL,eAAe,CAACI,IAAI,CAACE,SAAS,CAAC;IACnC,CAAC,CAAC,CACDC,KAAK,CAACC,CAAC,IAAIC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,CAAC;EAC1C,CAAC,EAAE,CAACjB,QAAQ,CAAC,CAAC;EAEdT,SAAS,CAAC,MAAM;IACZE,UAAU,EAAE,CAACiB,IAAI,CAACC,IAAI,IAAIH,UAAU,CAACG,IAAI,CAAC,CAAC;EAC/C,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;;EAEd;;EAEA,oBACIH,OAAA;IAAKqB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAC5BhB,SAAS,CAACiB,GAAG,CAACC,MAAM,iBACjBxB,OAAA,CAACF,GAAG;MAAAwB,QAAA,eACAtB,OAAA,CAACP,UAAU;QAAC+B,MAAM,EAAEA;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE,GADvBJ,MAAM,CAACZ,EAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEb;EAET;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEd,CAAC;AAAC1B,EAAA,CA9BID,UAAU;EAAA,QACOT,WAAW,EACAA,WAAW,EACSK,SAAS;AAAA;AAAAgC,EAAA,GAHzD5B,UAAU;AAgChB,eAAeA,UAAU;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}